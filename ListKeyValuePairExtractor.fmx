#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN ListKeyValuePairExtractor,1,Attributes,a24b75d4-9945-11e7-8bb9-c42c033923d4,"Linked Always",No,NO_PARALLELISM,,No,17291,YES,No,2or3
# <p>The <em>ListKeyValuePairExtractor</em> creates new attributes based on a list of keys (attribute names) and a list of values. <br />
# For example, a feature might contain the following list elements:</p>
# <p><em>list{0}.name = 'StringData'</em><br />
# <em>list{0}.data = 'Test Value'</em> <br />
# <em>list{1}.name = 'IntData'</em><br />
# <em>list{1}.data = 32536</em> <br />
# <em>list{2}.name = 'FloatData'</em><br />
# <em>list{2}.data = 23.67</em></p>
# <p>If the user sets the <em>Attribute Name List</em> to <em>list{<strong>n</strong>}.name</em> and the <em>Attribute Value List</em> to <em>list{<strong>n</strong>}.data</em>, the transformer will add  the following attributes to the output feature:</p>
# <p><em>StringData = 'Test Value'</em><br />
# <em>IntData = 32536</em><br />
# <em>FloatData = 23.67</em></p>
# <h3>IMPORTANT</h3>
# <p>In the example above, you can fill in any integer for list element <strong>n</strong>. Due to the fact that FME does not support  nested lists as an input parameter for custom transformers, you will actually have to specify it as a list attribute, using FME's List Element Selection dialog.<br />
# This means you can select regular attributes for the <em>Attribute Name List</em> and <em>Attribute Value List</em> parameters, but that will result in an error. It also means that if you have a basic unnested list, the index you specify does not matter. The <em>ListKeyValuePairExtractor</em> will simply fetch the complete list.</p>
# <p>For example, if you want to use all the values in <em>list{}.name</em> as your <em>Attribute Name List</em>, you could set the input parameter to <em>list{<strong>0</strong>}.name</em>. If there are 3 elements in this list, the transformer will fetch <em>list{0}.name</em>, <em>list{1}.name</em> and <em>list{2}.name</em>. But this will also be the case if you set it to <em>list{<strong>2</strong>}.name</em>, for example.</p>
# <p>However, if you want to use all the values of <em>list{}.nestedlist{}</em>, the index of the parent <em>list{}</em> matters and should exist! For example, if you set the <em>Attribute Name List</em> parameter to <em>list{<strong>3</strong>}.nestedlist{0}</em>, only the <em>nestedlist{}</em> elements within <em>list{<strong>3</strong>}</em> will be used.  </p>
# <p>Please note that the created attributes will not be exposed. You can use an <a href="https://www.safe.com/transformers/attribute-exposer/">AttributeExposer</a> afterwards to achieve that.</p>
# <h3>Notes</h3>
# <ul>
# <li>This transformer has been tested on Python 2.7 and 3.4.  </li>
# <li>Released under <a href="https://github.com/SanderSchaminee/fme-listkeyvaluepairextractor/blob/master/LICENSE">GNU General Public License v3.0</a>.  </li>
# <li>If you notice a bug or desire a new feature, please contact me. Or make a <a href="https://github.com/SanderSchaminee/fme-listkeyvaluepairextractor/">pull request</a>!</li>
# </ul>
# TRANSFORMER_END
#!   FME_DOCUMENT_GUID="a24b75d4-9945-11e7-8bb9-c42c033923d4"
#!   XFORM_DEPRECATED="No"
#!   MARKDOWN_USAGE="**Attribute Name List**  &#10;Specify the list attribute that should be used to extract the attribute names (keys). &#10;The list can have missing elements (in which case no attribute will be written), but the list should be in the same order as the _Attribute Value List_. Please read the overview section of this documentation for more information.&#10;&#10;**Attribute Value List**  &#10;Specify the list attribute that should be used to extract the attribute values. &#10;If a value is missing or null, a warning will be shown in the log. The value list does not need to be of the same size as the _Attribute Name List_, but if the created pairs should match, the list has to be in the same order. Please read the overview section of this documentation for more information.&#10;&#10;**Conflict Resolution**  &#10;If one or more of the _Attribute Name List_ elements already exist as a feature attribute, setting this value to &quot;Keep Original Attributes&quot; will prevent the attribute values from being overwritten by the _Attribute Value List_ elements."
#!   VIEW_POSITION="-246.002 195.002"
#!   WORKSPACE_VERSION="1"
#!   MAX_LOOP_ITERATIONS=""
#!   ATTR_TYPE_ENCODING="SDF"
#!   MARKDOWN_DESCRIPTION="The _ListKeyValuePairExtractor_ creates new attributes based on a list of keys (attribute names) and a list of values.   &#10;For example, a feature might contain the following list elements:&#10;&#10;_list{0}.name = &apos;StringData&apos;_  &#10;_list{0}.data = &apos;Test Value&apos;_   &#10;_list{1}.name = &apos;IntData&apos;_  &#10;_list{1}.data = 32536_   &#10;_list{2}.name = &apos;FloatData&apos;_  &#10;_list{2}.data = 23.67_&#10;&#10;If the user sets the _Attribute Name List_ to _list{**n**}.name_ and the _Attribute Value List_ to _list{**n**}.data_, the transformer will add  the following attributes to the output feature:&#10;&#10;_StringData = &apos;Test Value&apos;_  &#10;_IntData = 32536_  &#10;_FloatData = 23.67_&#10;&#10;### IMPORTANT&#10;In the example above, you can fill in any integer for list element **n**. Due to the fact that FME does not support  nested lists as an input parameter for custom transformers, you will actually have to specify it as a list attribute, using FME&apos;s List Element Selection dialog.  &#10;This means you can select regular attributes for the _Attribute Name List_ and _Attribute Value List_ parameters, but that will result in an error. It also means that if you have a basic unnested list, the index you specify does not matter. The _ListKeyValuePairExtractor_ will simply fetch the complete list.&#10;&#10;For example, if you want to use all the values in _list{}.name_ as your _Attribute Name List_, you could set the input parameter to _list{**0**}.name_. If there are 3 elements in this list, the transformer will fetch _list{0}.name_, _list{1}.name_ and _list{2}.name_. But this will also be the case if you set it to _list{**2**}.name_, for example.&#10;&#10;However, if you want to use all the values of _list{}.nestedlist{}_, the index of the parent _list{}_ matters and should exist! For example, if you set the _Attribute Name List_ parameter to _list{**3**}.nestedlist{0}_, only the _nestedlist{}_ elements within _list{**3**}_ will be used.  &#10;&#10;Please note that the created attributes will not be exposed. You can use an [AttributeExposer](https://www.safe.com/transformers/attribute-exposer/) afterwards to achieve that.&#10;&#10;###  Notes&#10;- This transformer has been tested on Python 2.7 and 3.4.  &#10;- Released under [GNU General Public License v3.0](https://github.com/SanderSchaminee/fme-listkeyvaluepairextractor/blob/master/LICENSE).  &#10;- If you notice a bug or desire a new feature, please contact me. Or make a [pull request](https://github.com/SanderSchaminee/fme-listkeyvaluepairextractor/)!"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   ZOOM_SCALE="100"
#!   ITERATION_COUNT_ATTR=""
#!   LAST_SAVE_BUILD="FME(R) 2017.0.1.1 (20170512 - Build 17291 - macosx)"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_DOCUMENT_PRIORGUID="f5dff8f8-5b21-11e7-be76-c42c033923d4,add26dd2-5b28-11e7-84ae-c42c033923d4,c74ac394-5b29-11e7-891b-c42c033923d4,1fb8e4de-5b39-11e7-8e59-c42c033923d4,c873fab8-60cb-11e7-bbbd-c42c033923d4"
#!   BLOCKED_LOOPING="No"
#!   FME_BUILD_NUM="17291"
#!   HISTORY="June&lt;space&gt;20&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Initial&lt;space&gt;creation,July&lt;space&gt;4&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Improved&lt;space&gt;the&lt;space&gt;Help&lt;space&gt;section&lt;space&gt;a&lt;space&gt;bit,September&lt;space&gt;14&lt;comma&gt;&lt;space&gt;2017,Sander&lt;space&gt;Schamin&lt;u00e9&gt;e,Set&lt;space&gt;to&lt;space&gt;Always&lt;space&gt;Linked&lt;comma&gt;&lt;space&gt;renamed&lt;space&gt;parameters&lt;comma&gt;&lt;space&gt;updated&lt;space&gt;docs"
#!   PASSWORD=""
#!   DOC_EXTENTS="2094.54 557.003"
#!   CATEGORY="Attributes"
#!   USAGE="&lt;p&gt;&lt;strong&gt;Attribute Name List&lt;/strong&gt;&lt;br /&gt;&#10;Specify the list attribute that should be used to extract the attribute names (keys). &#10;The list can have missing elements (in which case no attribute will be written), but the list should be in the same order as the &lt;em&gt;Attribute Value List&lt;/em&gt;. Please read the overview section of this documentation for more information.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Attribute Value List&lt;/strong&gt;&lt;br /&gt;&#10;Specify the list attribute that should be used to extract the attribute values. &#10;If a value is missing or null, a warning will be shown in the log. The value list does not need to be of the same size as the &lt;em&gt;Attribute Name List&lt;/em&gt;, but if the created pairs should match, the list has to be in the same order. Please read the overview section of this documentation for more information.&lt;/p&gt;&#10;&lt;p&gt;&lt;strong&gt;Conflict Resolution&lt;/strong&gt;&lt;br /&gt;&#10;If one or more of the &lt;em&gt;Attribute Name List&lt;/em&gt; elements already exist as a feature attribute, setting this value to &quot;Keep Original Attributes&quot; will prevent the attribute values from being overwritten by the &lt;em&gt;Attribute Value List&lt;/em&gt; elements.&lt;/p&gt;"
#!   TITLE="ListKeyValuePairExtractor"
#!   SHOW_ANNOTATIONS="true"
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   SHOW_INFO_NODES="true"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   LAST_SAVE_DATE="2017-09-14T14:40:03"
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_LINKED_TRANSFORMER_VERSION="1"
#!   FME_SERVER_SERVICES=""
#!   FMX_INSERT_MODE="Linked Always"
#!   DOC_TOP_LEFT="-576.525 -359.001"
#!   PYTHON_COMPATIBILITY="2or3"
#!   DESCRIPTION="&lt;p&gt;The &lt;em&gt;ListKeyValuePairExtractor&lt;/em&gt; creates new attributes based on a list of keys (attribute names) and a list of values. &lt;br /&gt;&#10;For example, a feature might contain the following list elements:&lt;/p&gt;&#10;&lt;p&gt;&lt;em&gt;list{0}.name = &apos;StringData&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;list{0}.data = &apos;Test Value&apos;&lt;/em&gt; &lt;br /&gt;&#10;&lt;em&gt;list{1}.name = &apos;IntData&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;list{1}.data = 32536&lt;/em&gt; &lt;br /&gt;&#10;&lt;em&gt;list{2}.name = &apos;FloatData&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;list{2}.data = 23.67&lt;/em&gt;&lt;/p&gt;&#10;&lt;p&gt;If the user sets the &lt;em&gt;Attribute Name List&lt;/em&gt; to &lt;em&gt;list{&lt;strong&gt;n&lt;/strong&gt;}.name&lt;/em&gt; and the &lt;em&gt;Attribute Value List&lt;/em&gt; to &lt;em&gt;list{&lt;strong&gt;n&lt;/strong&gt;}.data&lt;/em&gt;, the transformer will add  the following attributes to the output feature:&lt;/p&gt;&#10;&lt;p&gt;&lt;em&gt;StringData = &apos;Test Value&apos;&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;IntData = 32536&lt;/em&gt;&lt;br /&gt;&#10;&lt;em&gt;FloatData = 23.67&lt;/em&gt;&lt;/p&gt;&#10;&lt;h3&gt;IMPORTANT&lt;/h3&gt;&#10;&lt;p&gt;In the example above, you can fill in any integer for list element &lt;strong&gt;n&lt;/strong&gt;. Due to the fact that FME does not support  nested lists as an input parameter for custom transformers, you will actually have to specify it as a list attribute, using FME&apos;s List Element Selection dialog.&lt;br /&gt;&#10;This means you can select regular attributes for the &lt;em&gt;Attribute Name List&lt;/em&gt; and &lt;em&gt;Attribute Value List&lt;/em&gt; parameters, but that will result in an error. It also means that if you have a basic unnested list, the index you specify does not matter. The &lt;em&gt;ListKeyValuePairExtractor&lt;/em&gt; will simply fetch the complete list.&lt;/p&gt;&#10;&lt;p&gt;For example, if you want to use all the values in &lt;em&gt;list{}.name&lt;/em&gt; as your &lt;em&gt;Attribute Name List&lt;/em&gt;, you could set the input parameter to &lt;em&gt;list{&lt;strong&gt;0&lt;/strong&gt;}.name&lt;/em&gt;. If there are 3 elements in this list, the transformer will fetch &lt;em&gt;list{0}.name&lt;/em&gt;, &lt;em&gt;list{1}.name&lt;/em&gt; and &lt;em&gt;list{2}.name&lt;/em&gt;. But this will also be the case if you set it to &lt;em&gt;list{&lt;strong&gt;2&lt;/strong&gt;}.name&lt;/em&gt;, for example.&lt;/p&gt;&#10;&lt;p&gt;However, if you want to use all the values of &lt;em&gt;list{}.nestedlist{}&lt;/em&gt;, the index of the parent &lt;em&gt;list{}&lt;/em&gt; matters and should exist! For example, if you set the &lt;em&gt;Attribute Name List&lt;/em&gt; parameter to &lt;em&gt;list{&lt;strong&gt;3&lt;/strong&gt;}.nestedlist{0}&lt;/em&gt;, only the &lt;em&gt;nestedlist{}&lt;/em&gt; elements within &lt;em&gt;list{&lt;strong&gt;3&lt;/strong&gt;}&lt;/em&gt; will be used.  &lt;/p&gt;&#10;&lt;p&gt;Please note that the created attributes will not be exposed. You can use an &lt;a href=&quot;https://www.safe.com/transformers/attribute-exposer/&quot;&gt;AttributeExposer&lt;/a&gt; afterwards to achieve that.&lt;/p&gt;&#10;&lt;h3&gt;Notes&lt;/h3&gt;&#10;&lt;ul&gt;&#10;&lt;li&gt;This transformer has been tested on Python 2.7 and 3.4.  &lt;/li&gt;&#10;&lt;li&gt;Released under &lt;a href=&quot;https://github.com/SanderSchaminee/fme-listkeyvaluepairextractor/blob/master/LICENSE&quot;&gt;GNU General Public License v3.0&lt;/a&gt;.  &lt;/li&gt;&#10;&lt;li&gt;If you notice a bug or desire a new feature, please contact me. Or make a &lt;a href=&quot;https://github.com/SanderSchaminee/fme-listkeyvaluepairextractor/&quot;&gt;pull request&lt;/a&gt;!&lt;/li&gt;&#10;&lt;/ul&gt;"
#!   USE_MARKDOWN="YES"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI ATTR __KEY_ATTR Attribute Name List:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI ATTR __VAL_ATTR Attribute Value List:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LOOKUP_CHOICE __ATTR_CONFLICT_RES Use&lt;space&gt;Original&lt;space&gt;Attribute&lt;space&gt;Values,0%Use&lt;space&gt;List&lt;space&gt;Attribute&lt;space&gt;Values,1 Conflict Resolution:"
#!   DEFAULT_VALUE="1"
#!   IS_STAND_ALONE="false"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#!   IDENTIFIER="7"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;PythonCaller reads all&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;the key-value pairs and&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;creates attributes for each.&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;If a list element (index) is missing,&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;the corresponding value will&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;also be skipped.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="-156.031 198.002"
#!   TOP_LEFT="-156.031 198.002"
#!   BOTTOM_RIGHT="-157.031 199.002"
#!   BOUNDING_RECT="-156.031 198.002 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="2"
#! />
#! <COMMENT
#!   IDENTIFIER="8"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Clean up&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="1076.1 -42.0005"
#!   TOP_LEFT="1076.1 -42.0005"
#!   BOTTOM_RIGHT="1075.1 -41.0005"
#!   BOUNDING_RECT="1076.1 -42.0005 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="3"
#! />
#! <COMMENT
#!   IDENTIFIER="20"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;helvetica neue&apos;; font-size:13pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;Test for errors&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="542.912 -42.0004"
#!   TOP_LEFT="542.912 -42.0004"
#!   BOTTOM_RIGHT="541.912 -41.0004"
#!   BOUNDING_RECT="542.912 -42.0004 -1 -1"
#!   ORDER="5e+14"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   COLOUR="1,1,0.784314,0.192157"
#!   SIZE_POLICY="8"
#!   COMMENT_TYPE="REGULAR"
#!   ANCHORED_NODE="12"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="PythonCaller"
#!   VERSION="4"
#!   POSITION="-39.0296 -198.001"
#!   BOUNDING_RECT="-39.0296 -198.001 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__key_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__val_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__attr_conflict_res" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE="_error"/>
#!     <XFORM_PARM PARM_NAME="PYTHONSOURCE" PARM_VALUE="import&lt;space&gt;fme&lt;lf&gt;import&lt;space&gt;fmeobjects&lt;lf&gt;import&lt;space&gt;re&lt;lf&gt;&lt;lf&gt;class&lt;space&gt;ListKeyValuePairExtractor&lt;openparen&gt;object&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;__init__&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log&lt;space&gt;=&lt;space&gt;fmeobjects.FMELogFile&lt;openparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.name&lt;space&gt;=&lt;space&gt;self.__class__.__name__&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.regex1&lt;space&gt;=&lt;space&gt;re.compile&lt;openparen&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;openparen&gt;&lt;backslash&gt;d+&lt;closeparen&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;only&lt;space&gt;finds&lt;space&gt;the&lt;space&gt;number&lt;space&gt;&lt;openparen&gt;get_list_attribute_names&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.regex2&lt;space&gt;=&lt;space&gt;re.compile&lt;openparen&gt;&lt;apos&gt;&lt;openparen&gt;&lt;opencurly&gt;&lt;backslash&gt;d+&lt;closecurly&gt;&lt;closeparen&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;finds&lt;space&gt;number&lt;space&gt;including&lt;space&gt;braces&lt;space&gt;&lt;openparen&gt;get_pattern&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;input&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;get&lt;space&gt;user&lt;space&gt;input&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;key_attr&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__key_attr&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;val_attr&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__val_attr&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;overwrite&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;__attr_conflict_res&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;check&lt;space&gt;user&lt;space&gt;input&lt;space&gt;and&lt;space&gt;get&lt;space&gt;pattern&lt;space&gt;&lt;openparen&gt;prefix&lt;comma&gt;&lt;space&gt;suffix&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;overwrite&lt;space&gt;=&lt;space&gt;bool&lt;openparen&gt;int&lt;openparen&gt;overwrite&lt;closeparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;cast&lt;space&gt;to&lt;space&gt;boolean&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;&lt;openparen&gt;TypeError&lt;comma&gt;&lt;space&gt;ValueError&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;overwrite&lt;space&gt;=&lt;space&gt;False&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;do&lt;space&gt;not&lt;space&gt;overwrite&lt;space&gt;if&lt;space&gt;the&lt;space&gt;cast&lt;space&gt;failed&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;key_pattern&lt;space&gt;=&lt;space&gt;self.get_pattern&lt;openparen&gt;key_attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;val_pattern&lt;space&gt;=&lt;space&gt;self.get_pattern&lt;openparen&gt;val_attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;not&lt;space&gt;&lt;openparen&gt;key_pattern&lt;space&gt;and&lt;space&gt;val_pattern&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;this&lt;space&gt;should&lt;space&gt;not&lt;space&gt;happen&lt;comma&gt;&lt;space&gt;because&lt;space&gt;the&lt;space&gt;UI&lt;space&gt;should&lt;space&gt;address&lt;space&gt;this&lt;space&gt;problem&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;raise&lt;space&gt;fmeobjects.FMEException&lt;openparen&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;:&lt;space&gt;Please&lt;space&gt;supply&lt;space&gt;valid&lt;space&gt;list&lt;space&gt;attributes&lt;space&gt;for&lt;space&gt;the&lt;space&gt;keys&lt;space&gt;and&lt;space&gt;values!&lt;apos&gt;.format&lt;openparen&gt;self.name&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;fmeobjects.FME_ERROR&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;create&lt;space&gt;an&lt;space&gt;attribute&lt;space&gt;for&lt;space&gt;each&lt;space&gt;key-value&lt;space&gt;pair&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;keys&lt;space&gt;=&lt;space&gt;self.get_list_attribute_names&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;key_pattern&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;num_keys&lt;space&gt;=&lt;space&gt;len&lt;openparen&gt;keys&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;openparen&gt;key_index&lt;comma&gt;&lt;space&gt;key_name&lt;closeparen&gt;&lt;space&gt;in&lt;space&gt;keys:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;openparen&gt;is_null&lt;comma&gt;&lt;space&gt;is_missing&lt;comma&gt;&lt;space&gt;attr_type&lt;closeparen&gt;&lt;space&gt;=&lt;space&gt;feature.getAttributeNullMissingAndType&lt;openparen&gt;key_name&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;is_null&lt;space&gt;or&lt;space&gt;is_missing:&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;check&lt;space&gt;if&lt;space&gt;the&lt;space&gt;attribute&lt;space&gt;name&lt;space&gt;has&lt;space&gt;a&lt;space&gt;value&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;msg&lt;space&gt;=&lt;space&gt;&lt;quote&gt;Key&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;space&gt;does&lt;space&gt;not&lt;space&gt;have&lt;space&gt;a&lt;space&gt;value&lt;quote&gt;.format&lt;openparen&gt;key_name&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;.format&lt;openparen&gt;self.name&lt;comma&gt;&lt;space&gt;msg&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;fmeobjects.FME_WARN&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;num_keys&lt;space&gt;-=&lt;space&gt;1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;continue&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;key_attr&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;key_name&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;get&lt;space&gt;the&lt;space&gt;attribute&lt;space&gt;name&lt;space&gt;&lt;openparen&gt;key&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;key_attr&lt;space&gt;==&lt;space&gt;&lt;apos&gt;&lt;apos&gt;:&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;if&lt;space&gt;the&lt;space&gt;attribute&lt;space&gt;name&lt;space&gt;is&lt;space&gt;an&lt;space&gt;empty&lt;space&gt;string&lt;comma&gt;&lt;space&gt;we&lt;space&gt;will&lt;space&gt;skip&lt;space&gt;it&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;msg&lt;space&gt;=&lt;space&gt;&lt;quote&gt;Key&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;space&gt;contains&lt;space&gt;an&lt;space&gt;empty&lt;space&gt;string&lt;quote&gt;.format&lt;openparen&gt;key_name&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;.format&lt;openparen&gt;self.name&lt;comma&gt;&lt;space&gt;msg&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;fmeobjects.FME_WARN&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;num_keys&lt;space&gt;-=&lt;space&gt;1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;continue&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;val_attr&lt;space&gt;=&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;opencurly&gt;&lt;opencurly&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;closecurly&gt;&lt;closecurly&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;.format&lt;openparen&gt;val_pattern&lt;openbracket&gt;0&lt;closebracket&gt;&lt;comma&gt;&lt;space&gt;key_index&lt;comma&gt;&lt;space&gt;val_pattern&lt;openbracket&gt;1&lt;closebracket&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;matching&lt;space&gt;value&lt;space&gt;attribute&lt;space&gt;name&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;openparen&gt;val_null&lt;comma&gt;&lt;space&gt;val_missing&lt;comma&gt;&lt;space&gt;val_type&lt;closeparen&gt;&lt;space&gt;=&lt;space&gt;feature.getAttributeNullMissingAndType&lt;openparen&gt;val_attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;val_missing:&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;if&lt;space&gt;the&lt;space&gt;corresponding&lt;space&gt;value&lt;space&gt;does&lt;space&gt;not&lt;space&gt;exist&lt;comma&gt;&lt;space&gt;show&lt;space&gt;a&lt;space&gt;warning&lt;space&gt;and&lt;space&gt;continue&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;msg&lt;space&gt;=&lt;space&gt;&lt;quote&gt;Matching&lt;space&gt;value&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;space&gt;for&lt;space&gt;key&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;space&gt;&lt;openparen&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;does&lt;space&gt;not&lt;space&gt;exist&lt;quote&gt;.format&lt;openparen&gt;val_attr&lt;comma&gt;&lt;space&gt;key_name&lt;comma&gt;&lt;space&gt;key_attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;.format&lt;openparen&gt;self.name&lt;comma&gt;&lt;space&gt;msg&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;fmeobjects.FME_WARN&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;num_keys&lt;space&gt;-=&lt;space&gt;1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;continue&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;not&lt;space&gt;overwrite:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;openparen&gt;key_null&lt;comma&gt;&lt;space&gt;key_missing&lt;comma&gt;&lt;space&gt;key_type&lt;closeparen&gt;&lt;space&gt;=&lt;space&gt;feature.getAttributeNullMissingAndType&lt;openparen&gt;key_attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;not&lt;space&gt;&lt;openparen&gt;key_null&lt;space&gt;or&lt;space&gt;key_missing&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;continue&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;do&lt;space&gt;not&lt;space&gt;write&lt;space&gt;if&lt;space&gt;overwrite&lt;space&gt;=&lt;space&gt;False&lt;space&gt;and&lt;space&gt;key&lt;space&gt;attribute&lt;space&gt;has&lt;space&gt;a&lt;space&gt;value&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;val_null:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttributeNullWithType&lt;openparen&gt;key_attr&lt;comma&gt;&lt;space&gt;val_type&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;set&lt;space&gt;null&lt;space&gt;if&lt;space&gt;value&lt;space&gt;is&lt;space&gt;actually&lt;space&gt;null&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;value&lt;space&gt;=&lt;space&gt;feature.getAttribute&lt;openparen&gt;val_attr&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;get&lt;space&gt;the&lt;space&gt;attribute&lt;space&gt;value&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;error&lt;space&gt;=&lt;space&gt;self.write_attribute&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;key_attr&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;safely&lt;space&gt;write&lt;space&gt;attribute&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;error:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;msg&lt;space&gt;=&lt;space&gt;&lt;quote&gt;Could&lt;space&gt;not&lt;space&gt;write&lt;space&gt;value&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;space&gt;for&lt;space&gt;key&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;.format&lt;openparen&gt;val_attr&lt;comma&gt;&lt;space&gt;key_name&lt;comma&gt;&lt;space&gt;error&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;.format&lt;openparen&gt;self.name&lt;comma&gt;&lt;space&gt;msg&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;fmeobjects.FME_ERROR&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;num_keys&lt;space&gt;-=&lt;space&gt;1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;num_keys&lt;space&gt;==&lt;space&gt;0:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;if&lt;space&gt;there&lt;space&gt;are&lt;space&gt;no&lt;space&gt;keys&lt;space&gt;in&lt;space&gt;the&lt;space&gt;list&lt;space&gt;&lt;openparen&gt;or&lt;space&gt;none&lt;space&gt;left&lt;space&gt;after&lt;space&gt;all&lt;space&gt;the&lt;space&gt;warnings&lt;solidus&gt;errors&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;reject&lt;space&gt;the&lt;space&gt;feature&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;prefix&lt;comma&gt;&lt;space&gt;suffix&lt;space&gt;=&lt;space&gt;key_pattern&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;msg&lt;space&gt;=&lt;space&gt;&lt;quote&gt;No&lt;space&gt;&lt;openparen&gt;valid&lt;closeparen&gt;&lt;space&gt;keys&lt;space&gt;were&lt;space&gt;found&lt;space&gt;in&lt;space&gt;list&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;space&gt;or&lt;space&gt;there&lt;space&gt;was&lt;space&gt;a&lt;space&gt;problem&lt;space&gt;writing&lt;space&gt;their&lt;space&gt;values.&lt;quote&gt;.format&lt;openparen&gt;prefix&lt;comma&gt;&lt;space&gt;&lt;apos&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;comma&gt;&lt;space&gt;suffix&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log_error&lt;openparen&gt;feature&lt;comma&gt;&lt;space&gt;msg&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.removeAttribute&lt;openparen&gt;&lt;apos&gt;_error&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;make&lt;space&gt;sure&lt;space&gt;that&lt;space&gt;an&lt;space&gt;existing&lt;space&gt;_error&lt;space&gt;attribute&lt;space&gt;does&lt;space&gt;not&lt;space&gt;interfere&lt;space&gt;here&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.pyoutput&lt;openparen&gt;feature&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;log_error&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;message&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;Logs&lt;space&gt;an&lt;space&gt;error&lt;space&gt;and&lt;space&gt;writes&lt;space&gt;it&lt;space&gt;to&lt;space&gt;the&lt;space&gt;_error&lt;space&gt;attribute.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;self.log.logMessageString&lt;openparen&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;:&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;.format&lt;openparen&gt;self.name&lt;comma&gt;&lt;space&gt;message&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;fmeobjects.FME_ERROR&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;&lt;apos&gt;_error&lt;apos&gt;&lt;comma&gt;&lt;space&gt;&lt;quote&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;quote&gt;.format&lt;openparen&gt;message&lt;comma&gt;&lt;space&gt;&lt;quote&gt;Please&lt;space&gt;check&lt;space&gt;the&lt;space&gt;logfile.&lt;quote&gt;&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;write_attribute&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;name&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;Tries&lt;space&gt;to&lt;space&gt;write&lt;space&gt;an&lt;space&gt;attribute&lt;space&gt;&lt;apos&gt;safely&lt;apos&gt;.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;If&lt;space&gt;the&lt;space&gt;attribute&lt;space&gt;name&lt;space&gt;has&lt;space&gt;a&lt;space&gt;unicode&lt;space&gt;type&lt;space&gt;&lt;openparen&gt;Python&lt;space&gt;&lt;lt&gt;&lt;space&gt;3&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;try&lt;space&gt;to&lt;space&gt;encode&lt;space&gt;it.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;If&lt;space&gt;the&lt;space&gt;attribute&lt;space&gt;name&lt;space&gt;is&lt;space&gt;not&lt;space&gt;a&lt;space&gt;string&lt;comma&gt;&lt;space&gt;it&lt;space&gt;will&lt;space&gt;be&lt;space&gt;converted&lt;space&gt;into&lt;space&gt;one.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;Otherwise&lt;comma&gt;&lt;space&gt;skip&lt;space&gt;the&lt;space&gt;attribute&lt;space&gt;and&lt;space&gt;return&lt;space&gt;an&lt;space&gt;error&lt;space&gt;code.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;result&lt;space&gt;=&lt;space&gt;None&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;name&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;&lt;openparen&gt;over&lt;closeparen&gt;write&lt;space&gt;the&lt;space&gt;exploded&lt;space&gt;attribute&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;TypeError:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;try:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;hasattr&lt;openparen&gt;name&lt;comma&gt;&lt;space&gt;&lt;apos&gt;encode&lt;apos&gt;&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;name.encode&lt;openparen&gt;&lt;apos&gt;utf8&lt;apos&gt;&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;for&lt;space&gt;Python&lt;space&gt;&lt;lt&gt;&lt;space&gt;3&lt;comma&gt;&lt;space&gt;there&lt;space&gt;might&lt;space&gt;be&lt;space&gt;a&lt;space&gt;unicode&lt;space&gt;issue&lt;comma&gt;&lt;space&gt;so&lt;space&gt;let&lt;apos&gt;s&lt;space&gt;try&lt;space&gt;to&lt;space&gt;handle&lt;space&gt;that&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;feature.setAttribute&lt;openparen&gt;str&lt;openparen&gt;name&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;value&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;cast&lt;space&gt;to&lt;space&gt;str&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;Exception&lt;space&gt;as&lt;space&gt;e:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;result&lt;space&gt;=&lt;space&gt;e&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;except&lt;space&gt;Exception&lt;space&gt;as&lt;space&gt;e:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;result&lt;space&gt;=&lt;space&gt;e&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;result&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;get_list_attribute_names&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;feature&lt;comma&gt;&lt;space&gt;pattern&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;Retrieves&lt;space&gt;a&lt;space&gt;list&lt;space&gt;of&lt;space&gt;attribute&lt;space&gt;names&lt;space&gt;based&lt;space&gt;on&lt;space&gt;a&lt;space&gt;pattern&lt;space&gt;&lt;openparen&gt;prefix&lt;comma&gt;&lt;space&gt;suffix&lt;closeparen&gt;.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;This&lt;space&gt;is&lt;space&gt;necessary&lt;space&gt;because&lt;space&gt;a&lt;space&gt;list&lt;space&gt;could&lt;space&gt;have&lt;space&gt;missing&lt;space&gt;indices&lt;comma&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;so&lt;space&gt;simply&lt;space&gt;calling&lt;space&gt;feature.getAttribute&lt;openparen&gt;&lt;apos&gt;list&lt;opencurly&gt;&lt;closecurly&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;space&gt;might&lt;space&gt;not&lt;space&gt;work&lt;space&gt;properly&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;when&lt;space&gt;we&lt;space&gt;want&lt;space&gt;to&lt;space&gt;match&lt;space&gt;the&lt;space&gt;values&lt;space&gt;to&lt;space&gt;another&lt;space&gt;list&lt;space&gt;of&lt;space&gt;&lt;openparen&gt;un&lt;closeparen&gt;equal&lt;space&gt;length&lt;comma&gt;&lt;space&gt;as&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;that&lt;space&gt;gives&lt;space&gt;us&lt;space&gt;a&lt;space&gt;list&lt;space&gt;where&lt;space&gt;the&lt;space&gt;missing&lt;space&gt;values&lt;space&gt;have&lt;space&gt;been&lt;space&gt;removed.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;Returns&lt;space&gt;a&lt;space&gt;list&lt;space&gt;of&lt;space&gt;tuples&lt;space&gt;&lt;openbracket&gt;&lt;openparen&gt;index&lt;comma&gt;&lt;space&gt;attribute&lt;space&gt;name&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;...&lt;closebracket&gt;.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;prefix&lt;comma&gt;&lt;space&gt;suffix&lt;space&gt;=&lt;space&gt;pattern&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;attributes&lt;space&gt;=&lt;space&gt;feature.getAllAttributeNames&lt;openparen&gt;&lt;closeparen&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;get&lt;space&gt;all&lt;space&gt;attribute&lt;space&gt;names&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;result_list&lt;space&gt;=&lt;space&gt;&lt;openbracket&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;attr&lt;space&gt;in&lt;space&gt;attributes:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;filter&lt;space&gt;out&lt;space&gt;the&lt;space&gt;attributes&lt;space&gt;we&lt;space&gt;need&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;attr.startswith&lt;openparen&gt;prefix&lt;closeparen&gt;&lt;space&gt;and&lt;space&gt;attr.endswith&lt;openparen&gt;suffix&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;index&lt;space&gt;=&lt;space&gt;self.regex1.findall&lt;openparen&gt;attr&lt;closeparen&gt;&lt;openbracket&gt;-1&lt;closebracket&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;gets&lt;space&gt;the&lt;space&gt;last&lt;space&gt;number&lt;space&gt;&lt;openparen&gt;=&lt;space&gt;list&lt;space&gt;index&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;result_list.append&lt;openparen&gt;&lt;openparen&gt;index&lt;comma&gt;&lt;space&gt;attr&lt;closeparen&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;sorted&lt;openparen&gt;result_list&lt;closeparen&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;get_pattern&lt;openparen&gt;self&lt;comma&gt;&lt;space&gt;list_attr&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;Checks&lt;space&gt;if&lt;space&gt;the&lt;space&gt;input&lt;space&gt;is&lt;space&gt;a&lt;space&gt;list&lt;space&gt;attribute.&lt;space&gt;If&lt;space&gt;not&lt;comma&gt;&lt;space&gt;returns&lt;space&gt;None.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;If&lt;space&gt;it&lt;space&gt;is&lt;comma&gt;&lt;space&gt;it&lt;space&gt;will&lt;space&gt;return&lt;space&gt;a&lt;space&gt;&lt;quote&gt;search&lt;space&gt;pattern&lt;quote&gt;&lt;space&gt;&lt;openparen&gt;tuple&lt;space&gt;of&lt;space&gt;pre-&lt;space&gt;and&lt;space&gt;suffix&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;that&lt;space&gt;can&lt;space&gt;be&lt;space&gt;used&lt;space&gt;to&lt;space&gt;fetch&lt;space&gt;all&lt;space&gt;list&lt;space&gt;attributes&lt;space&gt;that&lt;space&gt;match&lt;space&gt;the&lt;space&gt;pattern.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;Returns&lt;space&gt;a&lt;space&gt;tuple&lt;space&gt;&lt;openparen&gt;attribute&lt;space&gt;prefix&lt;comma&gt;&lt;space&gt;attribute&lt;space&gt;suffix&lt;closeparen&gt;.&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;&lt;quote&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;not&lt;space&gt;list_attr:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;None&lt;space&gt;&lt;space&gt;#&lt;space&gt;if&lt;space&gt;attribute&lt;space&gt;is&lt;space&gt;&lt;apos&gt;&lt;apos&gt;&lt;space&gt;or&lt;space&gt;None&lt;comma&gt;&lt;space&gt;return&lt;space&gt;nothing&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;groups&lt;space&gt;=&lt;space&gt;self.regex2.findall&lt;openparen&gt;list_attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;len&lt;openparen&gt;groups&lt;closeparen&gt;&lt;space&gt;==&lt;space&gt;0:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;None&lt;space&gt;&lt;space&gt;#&lt;space&gt;if&lt;space&gt;there&lt;space&gt;are&lt;space&gt;no&lt;space&gt;groups&lt;comma&gt;&lt;space&gt;it&lt;apos&gt;s&lt;space&gt;not&lt;space&gt;a&lt;space&gt;list&lt;space&gt;attribute&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;split_list&lt;space&gt;=&lt;space&gt;self.regex2.split&lt;openparen&gt;list_attr&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;max_index&lt;space&gt;=&lt;space&gt;len&lt;openparen&gt;split_list&lt;closeparen&gt;&lt;space&gt;-&lt;space&gt;1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;#&lt;space&gt;find&lt;space&gt;the&lt;space&gt;last&lt;space&gt;occurence&lt;space&gt;of&lt;space&gt;&lt;opencurly&gt;n&lt;closecurly&gt;&lt;space&gt;-&lt;gt&gt;&lt;space&gt;search&lt;space&gt;backwards&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;split_pos&lt;space&gt;=&lt;space&gt;-1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;i&lt;space&gt;in&lt;space&gt;range&lt;openparen&gt;max_index&lt;comma&gt;&lt;space&gt;-1&lt;comma&gt;&lt;space&gt;-1&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;split_list&lt;openbracket&gt;i&lt;closebracket&gt;&lt;space&gt;==&lt;space&gt;groups&lt;openbracket&gt;-1&lt;closebracket&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;split_pos&lt;space&gt;=&lt;space&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;break&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;split_pos&lt;space&gt;&lt;lt&gt;&lt;space&gt;max_index:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;result&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;str.join&lt;openparen&gt;&lt;apos&gt;&lt;apos&gt;&lt;comma&gt;&lt;space&gt;split_list&lt;openbracket&gt;:split_pos&lt;closebracket&gt;&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;split_list&lt;openbracket&gt;split_pos&lt;space&gt;+&lt;space&gt;1&lt;closebracket&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;else:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;result&lt;space&gt;=&lt;space&gt;&lt;openparen&gt;str.join&lt;openparen&gt;&lt;apos&gt;&lt;apos&gt;&lt;comma&gt;&lt;space&gt;split_list&lt;openbracket&gt;:max_index&lt;closebracket&gt;&lt;closeparen&gt;&lt;comma&gt;&lt;space&gt;&lt;apos&gt;&lt;apos&gt;&lt;closeparen&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;result&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;def&lt;space&gt;close&lt;openparen&gt;self&lt;closeparen&gt;:&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;del&lt;space&gt;self"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="PythonCaller"/>
#!     <XFORM_PARM PARM_NAME="PYTHONSYMBOL" PARM_VALUE="ListKeyValuePairExtractor"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="HIDE_ATTRIBUTES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="3"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="1000.54 -198.001"
#!   BOUNDING_RECT="1000.54 -198.001 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__attr_conflict_res,__key_attr,_error,__val_attr"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="12"
#!   TYPE="Tester"
#!   VERSION="2"
#!   POSITION="481.505 -198.001"
#!   BOUNDING_RECT="481.505 -198.001 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="PASSED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__key_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__val_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__attr_conflict_res" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="__key_attr" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__val_attr" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__attr_conflict_res" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Tester"/>
#!     <XFORM_PARM PARM_NAME="BOOL_OP" PARM_VALUE="OR"/>
#!     <XFORM_PARM PARM_NAME="COMPOSITE_TEST" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="TEST_MODE" PARM_VALUE="Automatic"/>
#!     <XFORM_PARM PARM_NAME="TEST_DESCRIPTION" PARM_VALUE="&quot;&quot;"/>
#!     <XFORM_PARM PARM_NAME="TEST_CLAUSE" PARM_VALUE="TEST &lt;at&gt;Value&lt;openparen&gt;_error&lt;closeparen&gt; NOT_ATTRIBUTE_HAS_VALUE &quot;&quot;"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="16"
#!   TYPE="AttributeRemover"
#!   VERSION="1"
#!   POSITION="1000.54 -359.001"
#!   BOUNDING_RECT="1000.54 -359.001 -1 -1"
#!   ORDER="5e+14"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="17291"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_error" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="REMOVE_ATTRS" PARM_VALUE="__key_attr,__val_attr,__attr_conflict_res"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRemover_2"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="9"
#!   NAME="Output"
#!   POSITION="1518.01 -198.001"
#!   BOUNDING_RECT="1518.01 -198.001 -1 -1"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="11"
#!   NAME="Input"
#!   POSITION="-576.525 -198.001"
#!   BOUNDING_RECT="-576.525 -198.001 -1 -1"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#!     <XFORM_ATTR ATTR_NAME="__key_attr" ATTR_VALUE="$(__KEY_ATTR)" />
#!     <XFORM_ATTR ATTR_NAME="__val_attr" ATTR_VALUE="$(__VAL_ATTR)" />
#!     <XFORM_ATTR ATTR_NAME="__attr_conflict_res" ATTR_VALUE="$(__ATTR_CONFLICT_RES)" />
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="18"
#!   NAME="&lt;Rejected&gt;"
#!   POSITION="1518.01 -359.001"
#!   BOUNDING_RECT="1518.01 -359.001 -1 -1"
#!   COLLAPSED="false"
#!   IS_SOURCE="false"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="13"
#!   SOURCE_NODE="11"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="14"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="12"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="10"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="9"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="3"
#!   SOURCE_PORT_DESC="fo 0 PASSED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="19"
#!   SOURCE_NODE="16"
#!   TARGET_NODE="18"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="17"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="16"
#!   SOURCE_PORT_DESC="fo 1 FAILED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>
FME_PYTHON_VERSION 2or3
DEFAULT_MACRO $(ListKeyValuePairExtractor_WORKSPACE_NAME)___KEY_ATTR 
DEFAULT_MACRO $(ListKeyValuePairExtractor_WORKSPACE_NAME)___VAL_ATTR 
DEFAULT_MACRO $(ListKeyValuePairExtractor_WORKSPACE_NAME)___ATTR_CONFLICT_RES 1
#! START_HEADER
#! END_HEADER

LOG_FILTER_MASK -1
DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO ListKeyValuePairExtractor_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(ListKeyValuePairExtractor_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(ListKeyValuePairExtractor_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Input1505392804 Input Splitter"   INPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Input" "@EvaluateExpression(ATTR_CREATE_EXPR_PROPAGATE_MISSING_FDIV,__key_attr,$($(ListKeyValuePairExtractor_WORKSPACE_NAME)___KEY_ATTR$encode),__val_attr,$($(ListKeyValuePairExtractor_WORKSPACE_NAME)___VAL_ATTR$encode),__attr_conflict_res,$($(ListKeyValuePairExtractor_WORKSPACE_NAME)___ATTR_CONFLICT_RES), FEATURE_TYPE)"
# -------------------------------------------------------------------------


FME_PYTHON_PATH "$(FME_MF_DIR)"

FACTORY_DEF * PythonFactory    FACTORY_NAME $(ListKeyValuePairExtractor_WORKSPACE_NAME)_PythonCaller    INPUT  FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Input"    SYMBOL_NAME ListKeyValuePairExtractor    PYTHON_NAMESPACE FMEOBJECTS    SOURCE_CODE import<space>fme<lf>import<space>fmeobjects<lf>import<space>re<lf><lf>class<space>ListKeyValuePairExtractor<openparen>object<closeparen>:<lf><space><space><space><space>def<space>__init__<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>self.log<space>=<space>fmeobjects.FMELogFile<openparen><closeparen><lf><space><space><space><space><space><space><space><space>self.name<space>=<space>self.__class__.__name__<lf><space><space><space><space><space><space><space><space>self.regex1<space>=<space>re.compile<openparen><apos><opencurly><openparen><backslash>d+<closeparen><closecurly><apos><closeparen><space><space>#<space>only<space>finds<space>the<space>number<space><openparen>get_list_attribute_names<closeparen><lf><space><space><space><space><space><space><space><space>self.regex2<space>=<space>re.compile<openparen><apos><openparen><opencurly><backslash>d+<closecurly><closeparen><apos><closeparen><space><space>#<space>finds<space>number<space>including<space>braces<space><openparen>get_pattern<closeparen><lf><space><space><space><space><lf><space><space><space><space>def<space>input<openparen>self<comma><space>feature<closeparen>:<lf><space><space><space><space><space><space><space><space>#<space>get<space>user<space>input<lf><space><space><space><space><space><space><space><space>key_attr<space>=<space>feature.getAttribute<openparen><apos>__key_attr<apos><closeparen><lf><space><space><space><space><space><space><space><space>val_attr<space>=<space>feature.getAttribute<openparen><apos>__val_attr<apos><closeparen><lf><space><space><space><space><space><space><space><space>overwrite<space>=<space>feature.getAttribute<openparen><apos>__attr_conflict_res<apos><closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space><space><space><space><space>#<space>check<space>user<space>input<space>and<space>get<space>pattern<space><openparen>prefix<comma><space>suffix<closeparen><lf><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space>overwrite<space>=<space>bool<openparen>int<openparen>overwrite<closeparen><closeparen><space><space>#<space>cast<space>to<space>boolean<lf><space><space><space><space><space><space><space><space>except<space><openparen>TypeError<comma><space>ValueError<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>overwrite<space>=<space>False<space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>do<space>not<space>overwrite<space>if<space>the<space>cast<space>failed<lf><space><space><space><space><space><space><space><space>key_pattern<space>=<space>self.get_pattern<openparen>key_attr<closeparen><lf><space><space><space><space><space><space><space><space>val_pattern<space>=<space>self.get_pattern<openparen>val_attr<closeparen><lf><space><space><space><space><space><space><space><space>if<space>not<space><openparen>key_pattern<space>and<space>val_pattern<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>this<space>should<space>not<space>happen<comma><space>because<space>the<space>UI<space>should<space>address<space>this<space>problem<lf><space><space><space><space><space><space><space><space><space><space><space><space>raise<space>fmeobjects.FMEException<openparen><apos><opencurly><closecurly>:<space>Please<space>supply<space>valid<space>list<space>attributes<space>for<space>the<space>keys<space>and<space>values!<apos>.format<openparen>self.name<closeparen><comma><space>fmeobjects.FME_ERROR<closeparen><lf><space><space><space><space><space><space><space><space><lf><space><space><space><space><space><space><space><space>#<space>create<space>an<space>attribute<space>for<space>each<space>key-value<space>pair<lf><space><space><space><space><space><space><space><space>keys<space>=<space>self.get_list_attribute_names<openparen>feature<comma><space>key_pattern<closeparen><lf><space><space><space><space><space><space><space><space>num_keys<space>=<space>len<openparen>keys<closeparen><lf><space><space><space><space><space><space><space><space>for<space><openparen>key_index<comma><space>key_name<closeparen><space>in<space>keys:<lf><space><space><space><space><space><space><space><space><space><space><space><space><openparen>is_null<comma><space>is_missing<comma><space>attr_type<closeparen><space>=<space>feature.getAttributeNullMissingAndType<openparen>key_name<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>is_null<space>or<space>is_missing:<space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>check<space>if<space>the<space>attribute<space>name<space>has<space>a<space>value<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>msg<space>=<space><quote>Key<space><apos><opencurly><closecurly><apos><space>does<space>not<space>have<space>a<space>value<quote>.format<openparen>key_name<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen><quote><opencurly><closecurly>:<space><opencurly><closecurly><quote>.format<openparen>self.name<comma><space>msg<closeparen><comma><space>fmeobjects.FME_WARN<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>num_keys<space>-=<space>1<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>continue<lf><space><space><space><space><space><space><space><space><space><space><space><space>key_attr<space>=<space>feature.getAttribute<openparen>key_name<closeparen><space><space><space>#<space>get<space>the<space>attribute<space>name<space><openparen>key<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>key_attr<space>==<space><apos><apos>:<space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>if<space>the<space>attribute<space>name<space>is<space>an<space>empty<space>string<comma><space>we<space>will<space>skip<space>it<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>msg<space>=<space><quote>Key<space><apos><opencurly><closecurly><apos><space>contains<space>an<space>empty<space>string<quote>.format<openparen>key_name<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen><quote><opencurly><closecurly>:<space><opencurly><closecurly><quote>.format<openparen>self.name<comma><space>msg<closeparen><comma><space>fmeobjects.FME_WARN<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>num_keys<space>-=<space>1<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>continue<lf><space><space><space><space><space><space><space><space><space><space><space><space>val_attr<space>=<space><apos><opencurly><closecurly><opencurly><opencurly><opencurly><closecurly><closecurly><closecurly><opencurly><closecurly><apos>.format<openparen>val_pattern<openbracket>0<closebracket><comma><space>key_index<comma><space>val_pattern<openbracket>1<closebracket><closeparen><space><space>#<space>matching<space>value<space>attribute<space>name<lf><space><space><space><space><space><space><space><space><space><space><space><space><openparen>val_null<comma><space>val_missing<comma><space>val_type<closeparen><space>=<space>feature.getAttributeNullMissingAndType<openparen>val_attr<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>val_missing:<space><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>if<space>the<space>corresponding<space>value<space>does<space>not<space>exist<comma><space>show<space>a<space>warning<space>and<space>continue<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>msg<space>=<space><quote>Matching<space>value<space><apos><opencurly><closecurly><apos><space>for<space>key<space><apos><opencurly><closecurly><apos><space><openparen><apos><opencurly><closecurly><apos><closeparen><space>does<space>not<space>exist<quote>.format<openparen>val_attr<comma><space>key_name<comma><space>key_attr<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen><quote><opencurly><closecurly>:<space><opencurly><closecurly><quote>.format<openparen>self.name<comma><space>msg<closeparen><comma><space>fmeobjects.FME_WARN<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>num_keys<space>-=<space>1<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>continue<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>not<space>overwrite:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><openparen>key_null<comma><space>key_missing<comma><space>key_type<closeparen><space>=<space>feature.getAttributeNullMissingAndType<openparen>key_attr<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space>not<space><openparen>key_null<space>or<space>key_missing<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>continue<space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>do<space>not<space>write<space>if<space>overwrite<space>=<space>False<space>and<space>key<space>attribute<space>has<space>a<space>value<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>val_null:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttributeNullWithType<openparen>key_attr<comma><space>val_type<closeparen><space><space><space><space>#<space>set<space>null<space>if<space>value<space>is<space>actually<space>null<lf><space><space><space><space><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>value<space>=<space>feature.getAttribute<openparen>val_attr<closeparen><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>#<space>get<space>the<space>attribute<space>value<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>error<space>=<space>self.write_attribute<openparen>feature<comma><space>key_attr<comma><space>value<closeparen><space><space>#<space>safely<space>write<space>attribute<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>error:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>msg<space>=<space><quote>Could<space>not<space>write<space>value<space><apos><opencurly><closecurly><apos><space>for<space>key<space><apos><opencurly><closecurly><apos>:<space><opencurly><closecurly><quote>.format<openparen>val_attr<comma><space>key_name<comma><space>error<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen><quote><opencurly><closecurly>:<space><opencurly><closecurly><quote>.format<openparen>self.name<comma><space>msg<closeparen><comma><space>fmeobjects.FME_ERROR<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>num_keys<space>-=<space>1<lf><space><space><space><space><space><space><space><space>if<space>num_keys<space>==<space>0:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>if<space>there<space>are<space>no<space>keys<space>in<space>the<space>list<space><openparen>or<space>none<space>left<space>after<space>all<space>the<space>warnings<solidus>errors<closeparen><comma><space>reject<space>the<space>feature<lf><space><space><space><space><space><space><space><space><space><space><space><space>prefix<comma><space>suffix<space>=<space>key_pattern<lf><space><space><space><space><space><space><space><space><space><space><space><space>msg<space>=<space><quote>No<space><openparen>valid<closeparen><space>keys<space>were<space>found<space>in<space>list<space><apos><opencurly><closecurly><opencurly><closecurly><opencurly><closecurly><apos><space>or<space>there<space>was<space>a<space>problem<space>writing<space>their<space>values.<quote>.format<openparen>prefix<comma><space><apos><opencurly><closecurly><apos><comma><space>suffix<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space>self.log_error<openparen>feature<comma><space>msg<closeparen><lf><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space>feature.removeAttribute<openparen><apos>_error<apos><closeparen><space><space>#<space>make<space>sure<space>that<space>an<space>existing<space>_error<space>attribute<space>does<space>not<space>interfere<space>here<lf><space><space><space><space><space><space><space><space>self.pyoutput<openparen>feature<closeparen><lf><lf><space><space><space><space>def<space>log_error<openparen>self<comma><space>feature<comma><space>message<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>Logs<space>an<space>error<space>and<space>writes<space>it<space>to<space>the<space>_error<space>attribute.<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>self.log.logMessageString<openparen><quote><opencurly><closecurly>:<space><opencurly><closecurly><quote>.format<openparen>self.name<comma><space>message<closeparen><comma><space>fmeobjects.FME_ERROR<closeparen><lf><space><space><space><space><space><space><space><space>feature.setAttribute<openparen><apos>_error<apos><comma><space><quote><opencurly><closecurly><space><opencurly><closecurly><quote>.format<openparen>message<comma><space><quote>Please<space>check<space>the<space>logfile.<quote><closeparen><closeparen><lf><lf><space><space><space><space>def<space>write_attribute<openparen>self<comma><space>feature<comma><space>name<comma><space>value<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>Tries<space>to<space>write<space>an<space>attribute<space><apos>safely<apos>.<lf><space><space><space><space><space><space><space><space>If<space>the<space>attribute<space>name<space>has<space>a<space>unicode<space>type<space><openparen>Python<space><lt><space>3<closeparen><comma><space>try<space>to<space>encode<space>it.<lf><space><space><space><space><space><space><space><space>If<space>the<space>attribute<space>name<space>is<space>not<space>a<space>string<comma><space>it<space>will<space>be<space>converted<space>into<space>one.<lf><space><space><space><space><space><space><space><space>Otherwise<comma><space>skip<space>the<space>attribute<space>and<space>return<space>an<space>error<space>code.<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>result<space>=<space>None<lf><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttribute<openparen>name<comma><space>value<closeparen><space><space><space>#<space><openparen>over<closeparen>write<space>the<space>exploded<space>attribute<lf><space><space><space><space><space><space><space><space>except<space>TypeError:<lf><space><space><space><space><space><space><space><space><space><space><space><space>try:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space>hasattr<openparen>name<comma><space><apos>encode<apos><closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttribute<openparen>name.encode<openparen><apos>utf8<apos><closeparen><comma><space>value<closeparen><space><space>#<space>for<space>Python<space><lt><space>3<comma><space>there<space>might<space>be<space>a<space>unicode<space>issue<comma><space>so<space>let<apos>s<space>try<space>to<space>handle<space>that<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>feature.setAttribute<openparen>str<openparen>name<closeparen><comma><space>value<closeparen><space><space><space><space><space><space><space><space><space><space><space><space>#<space>cast<space>to<space>str<lf><space><space><space><space><space><space><space><space><space><space><space><space>except<space>Exception<space>as<space>e:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>result<space>=<space>e<lf><space><space><space><space><space><space><space><space>except<space>Exception<space>as<space>e:<lf><space><space><space><space><space><space><space><space><space><space><space><space>result<space>=<space>e<lf><space><space><space><space><space><space><space><space>return<space>result<lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>get_list_attribute_names<openparen>self<comma><space>feature<comma><space>pattern<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>Retrieves<space>a<space>list<space>of<space>attribute<space>names<space>based<space>on<space>a<space>pattern<space><openparen>prefix<comma><space>suffix<closeparen>.<lf><space><space><space><space><space><space><space><space>This<space>is<space>necessary<space>because<space>a<space>list<space>could<space>have<space>missing<space>indices<comma><lf><space><space><space><space><space><space><space><space>so<space>simply<space>calling<space>feature.getAttribute<openparen><apos>list<opencurly><closecurly><apos><closeparen><space>might<space>not<space>work<space>properly<lf><space><space><space><space><space><space><space><space>when<space>we<space>want<space>to<space>match<space>the<space>values<space>to<space>another<space>list<space>of<space><openparen>un<closeparen>equal<space>length<comma><space>as<lf><space><space><space><space><space><space><space><space>that<space>gives<space>us<space>a<space>list<space>where<space>the<space>missing<space>values<space>have<space>been<space>removed.<lf><space><space><space><space><space><space><space><space>Returns<space>a<space>list<space>of<space>tuples<space><openbracket><openparen>index<comma><space>attribute<space>name<closeparen><comma><space>...<closebracket>.<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>prefix<comma><space>suffix<space>=<space>pattern<lf><space><space><space><space><space><space><space><space>attributes<space>=<space>feature.getAllAttributeNames<openparen><closeparen><space><space><space><space><space>#<space>get<space>all<space>attribute<space>names<lf><space><space><space><space><space><space><space><space>result_list<space>=<space><openbracket><closebracket><lf><space><space><space><space><space><space><space><space>for<space>attr<space>in<space>attributes:<lf><space><space><space><space><space><space><space><space><space><space><space><space>#<space>filter<space>out<space>the<space>attributes<space>we<space>need<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>attr.startswith<openparen>prefix<closeparen><space>and<space>attr.endswith<openparen>suffix<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>index<space>=<space>self.regex1.findall<openparen>attr<closeparen><openbracket>-1<closebracket><space><space><space>#<space>gets<space>the<space>last<space>number<space><openparen>=<space>list<space>index<closeparen><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>result_list.append<openparen><openparen>index<comma><space>attr<closeparen><closeparen><lf><space><space><space><space><space><space><space><space>return<space>sorted<openparen>result_list<closeparen><lf><lf><space><space><space><space>def<space>get_pattern<openparen>self<comma><space>list_attr<closeparen>:<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>Checks<space>if<space>the<space>input<space>is<space>a<space>list<space>attribute.<space>If<space>not<comma><space>returns<space>None.<lf><space><space><space><space><space><space><space><space>If<space>it<space>is<comma><space>it<space>will<space>return<space>a<space><quote>search<space>pattern<quote><space><openparen>tuple<space>of<space>pre-<space>and<space>suffix<closeparen><lf><space><space><space><space><space><space><space><space>that<space>can<space>be<space>used<space>to<space>fetch<space>all<space>list<space>attributes<space>that<space>match<space>the<space>pattern.<lf><space><space><space><space><space><space><space><space>Returns<space>a<space>tuple<space><openparen>attribute<space>prefix<comma><space>attribute<space>suffix<closeparen>.<lf><space><space><space><space><space><space><space><space><quote><quote><quote><lf><space><space><space><space><space><space><space><space>if<space>not<space>list_attr:<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space>None<space><space>#<space>if<space>attribute<space>is<space><apos><apos><space>or<space>None<comma><space>return<space>nothing<lf><space><space><space><space><space><space><space><space>groups<space>=<space>self.regex2.findall<openparen>list_attr<closeparen><lf><space><space><space><space><space><space><space><space>if<space>len<openparen>groups<closeparen><space>==<space>0:<lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space>None<space><space>#<space>if<space>there<space>are<space>no<space>groups<comma><space>it<apos>s<space>not<space>a<space>list<space>attribute<lf><space><space><space><space><space><space><space><space>split_list<space>=<space>self.regex2.split<openparen>list_attr<closeparen><lf><space><space><space><space><space><space><space><space>max_index<space>=<space>len<openparen>split_list<closeparen><space>-<space>1<lf><space><space><space><space><space><space><space><space>#<space>find<space>the<space>last<space>occurence<space>of<space><opencurly>n<closecurly><space>-<gt><space>search<space>backwards<lf><space><space><space><space><space><space><space><space>split_pos<space>=<space>-1<lf><space><space><space><space><space><space><space><space>for<space>i<space>in<space>range<openparen>max_index<comma><space>-1<comma><space>-1<closeparen>:<lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space>split_list<openbracket>i<closebracket><space>==<space>groups<openbracket>-1<closebracket>:<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>split_pos<space>=<space>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>break<lf><space><space><space><space><space><space><space><space>if<space>split_pos<space><lt><space>max_index:<lf><space><space><space><space><space><space><space><space><space><space><space><space>result<space>=<space><openparen>str.join<openparen><apos><apos><comma><space>split_list<openbracket>:split_pos<closebracket><closeparen><comma><space>split_list<openbracket>split_pos<space>+<space>1<closebracket><closeparen><lf><space><space><space><space><space><space><space><space>else:<lf><space><space><space><space><space><space><space><space><space><space><space><space>result<space>=<space><openparen>str.join<openparen><apos><apos><comma><space>split_list<openbracket>:max_index<closebracket><closeparen><comma><space><apos><apos><closeparen><lf><space><space><space><space><space><space><space><space>return<space>result<lf><space><space><space><space><space><space><space><space><lf><space><space><space><space>def<space>close<openparen>self<closeparen>:<lf><space><space><space><space><space><space><space><space>del<space>self    OUTPUT PYOUTPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_PythonCaller_OUTPUT"

# -------------------------------------------------------------------------

FACTORY_DEF * TestFactory    FACTORY_NAME $(ListKeyValuePairExtractor_WORKSPACE_NAME)_Tester    INPUT  FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_PythonCaller_OUTPUT"    TEST @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>_error<closeparen>,$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Tester) NOT_ATTRIBUTE_HAS_VALUE "" ENCODED    BOOLEAN_OPERATOR OR    OUTPUT PASSED FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FAILED FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Tester_FAILED"
# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_2    INPUT  FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Tester_FAILED"    OUTPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"        @RemoveAttributes(fme_encoded,__key_attr,__val_attr,__attr_conflict_res)        @RemoveAttributes(fme_pcre_match"$($(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_2_LIST_EXP)")

# -------------------------------------------------------------------------

INCLUDE [    set macroLine "MACRO $(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_LIST_EXP ";    foreach attr [split ""] {       set attr [FME_DecodeText $attr];       set attr [regsub "{}$" $attr "{}.*"];       set attr [regsub -all "{}" $attr "\\{\[0-9\]+\\}"];       append macroLine ",^$attr$";    };    puts $macroLine; ]
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover    INPUT  FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Tester_PASSED"    OUTPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_OUTPUT"        @RemoveAttributes(fme_encoded,__attr_conflict_res,__key_attr,_error,__val_attr)        @RemoveAttributes(fme_pcre_match"$($(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_LIST_EXP)")

FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Output1505392804 Output Collector"   INPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_OUTPUT"   OUTPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_Output"
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_<Rejected>1505392804 Output Collector"   INPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_AttributeRemover_2_OUTPUT"   OUTPUT FEATURE_TYPE "$(ListKeyValuePairExtractor_WORKSPACE_NAME)_<Rejected>"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(ListKeyValuePairExtractor_WORKSPACE_NAME))}]
